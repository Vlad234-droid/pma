/* tslint:disable */
/* eslint-disable */
/**
 * PMA API
 * Documentation PMA API v1.0
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  SubsidiaryPermission,
  SubsidiaryPermissionFromJSON,
  SubsidiaryPermissionFromJSONTyped,
  SubsidiaryPermissionToJSON,
} from './';

/**
 *
 * @export
 * @interface User
 */
export interface User {
  /**
   *
   * @type {string}
   * @memberof User
   */
  colleagueUuid?: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  firstName?: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  middleName?: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  lastName?: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  gender?: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  email?: string;
  /**
   *
   * @type {Array<SubsidiaryPermission>}
   * @memberof User
   */
  subsidiaryPermissions?: Array<SubsidiaryPermission>;
  /**
   *
   * @type {Array<string>}
   * @memberof User
   */
  roles?: Array<string>;
}

export function UserFromJSON(json: any): User {
  return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    colleagueUuid: !exists(json, 'colleagueUuid') ? undefined : json['colleagueUuid'],
    title: !exists(json, 'title') ? undefined : json['title'],
    firstName: !exists(json, 'firstName') ? undefined : json['firstName'],
    middleName: !exists(json, 'middleName') ? undefined : json['middleName'],
    lastName: !exists(json, 'lastName') ? undefined : json['lastName'],
    gender: !exists(json, 'gender') ? undefined : json['gender'],
    email: !exists(json, 'email') ? undefined : json['email'],
    subsidiaryPermissions: !exists(json, 'subsidiaryPermissions')
      ? undefined
      : (json['subsidiaryPermissions'] as Array<any>).map(SubsidiaryPermissionFromJSON),
    roles: !exists(json, 'roles') ? undefined : json['roles'],
  };
}

export function UserToJSON(value?: User | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    colleagueUuid: value.colleagueUuid,
    title: value.title,
    firstName: value.firstName,
    middleName: value.middleName,
    lastName: value.lastName,
    gender: value.gender,
    email: value.email,
    subsidiaryPermissions:
      value.subsidiaryPermissions === undefined
        ? undefined
        : (value.subsidiaryPermissions as Array<any>).map(SubsidiaryPermissionToJSON),
    roles: value.roles,
  };
}
