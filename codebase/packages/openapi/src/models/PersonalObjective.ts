/* tslint:disable */
/* eslint-disable */
/**
 * PMA API
 * Documentation PMA API v1.0
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface PersonalObjective
 */
export interface PersonalObjective {
  /**
   *
   * @type {string}
   * @memberof PersonalObjective
   */
  uuid?: string;
  /**
   *
   * @type {string}
   * @memberof PersonalObjective
   */
  colleagueUuid?: string;
  /**
   *
   * @type {string}
   * @memberof PersonalObjective
   */
  performanceCycleUuid?: string;
  /**
   *
   * @type {number}
   * @memberof PersonalObjective
   */
  sequenceNumber?: number;
  /**
   *
   * @type {string}
   * @memberof PersonalObjective
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof PersonalObjective
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof PersonalObjective
   */
  meets?: string;
  /**
   *
   * @type {string}
   * @memberof PersonalObjective
   */
  exceeds?: string;
  /**
   *
   * @type {string}
   * @memberof PersonalObjective
   */
  groupObjectiveUuid?: string;
  /**
   *
   * @type {string}
   * @memberof PersonalObjective
   */
  status?: PersonalObjectiveStatusEnum;
}

/**
 * @export
 * @enum {string}
 */
export enum PersonalObjectiveStatusEnum {
  Draft = 'DRAFT',
  Submitted = 'SUBMITTED',
  Approved = 'APPROVED',
  Rejected = 'REJECTED',
  Completed = 'COMPLETED',
}

export function PersonalObjectiveFromJSON(json: any): PersonalObjective {
  return PersonalObjectiveFromJSONTyped(json, false);
}

export function PersonalObjectiveFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonalObjective {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    uuid: !exists(json, 'uuid') ? undefined : json['uuid'],
    colleagueUuid: !exists(json, 'colleagueUuid') ? undefined : json['colleagueUuid'],
    performanceCycleUuid: !exists(json, 'performanceCycleUuid') ? undefined : json['performanceCycleUuid'],
    sequenceNumber: !exists(json, 'sequenceNumber') ? undefined : json['sequenceNumber'],
    title: !exists(json, 'title') ? undefined : json['title'],
    description: !exists(json, 'description') ? undefined : json['description'],
    meets: !exists(json, 'meets') ? undefined : json['meets'],
    exceeds: !exists(json, 'exceeds') ? undefined : json['exceeds'],
    groupObjectiveUuid: !exists(json, 'groupObjectiveUuid') ? undefined : json['groupObjectiveUuid'],
    status: !exists(json, 'status') ? undefined : json['status'],
  };
}

export function PersonalObjectiveToJSON(value?: PersonalObjective | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    uuid: value.uuid,
    colleagueUuid: value.colleagueUuid,
    performanceCycleUuid: value.performanceCycleUuid,
    sequenceNumber: value.sequenceNumber,
    title: value.title,
    description: value.description,
    meets: value.meets,
    exceeds: value.exceeds,
    groupObjectiveUuid: value.groupObjectiveUuid,
    status: value.status,
  };
}
